{"version":3,"sources":["styles.js","Components/Input/Input.js","Containers/SignUp/SignUp.js","Containers/login/Login.js","Components/Button/Button.js","Components/VerifyLogin/VerifyLogin.js","Containers/Header/header.js","data/GlobalRequest/GlobalRequest.js","data/CountryRequest/CountryRequest.js","Containers/Body/Body.js","pages/initial/initial.js","App.js","serviceWorker.js","index.js"],"names":["InputCustom","styled","input","LabelStyle","label","HeaderCustom","div","DivDisplay","DivLogout","DivContainer","DivDisplayFixed","DivDisplayDynamic","SignUpStyle","LoginStyle","Display","DataGreen","span","DataRed","Input","props","placeholder","hint","type","SignUp","useState","email","password","passwordConfirm","user","setUser","onChange","e","target","value","onClick","axios","post","then","response","status","window","location","reload","catch","error","length","alert","Swal","fire","title","text","icon","confirmButtonText","Login","console","log","data","token","localStorage","setItem","Button","className","typebtn","VerifyLogin","showLogin","setShowLogin","showSignUp","setShowSignUp","logged","removeItem","Header","isLogged","GlobalRequest","totalConfirm","totalRecover","totalDeath","dataTotal","setDataTotal","useEffect","get","res","Global","TotalConfirmed","TotalRecovered","TotalDeaths","CountryRequest","country","setCountry","showResult","setShowResult","today","Date","yesterday","setDate","getDate","toISOString","slice","request","a","r","Confirmed","Recovered","Deaths","searchType","Body","Initial","setLogged","getItem","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2uFAGO,IAAMA,EAAcC,IAAOC,MAAV,KAQXC,EAAaF,IAAOG,MAAV,KASVC,EAAeJ,IAAOK,IAAV,KAiBZC,EAAaN,IAAOK,IAAV,KAIVE,EAAYP,IAAOK,IAAV,KAMTG,EAAeR,IAAOK,IAAV,KAMZI,EAAkBT,IAAOK,IAAV,KAKfK,EAAoBV,IAAOK,IAAV,KAMjBM,EAAcX,IAAOK,IAAV,KAWXO,EAAaZ,IAAOK,IAAV,KAYVQ,EAAUb,IAAOK,IAAV,KAmBPS,EAAYd,IAAOe,KAAV,KAGTC,EAAUhB,IAAOe,KAAV,K,8BC9FLE,EAZD,SAACC,GACb,OACE,kBAAChB,EAAD,KACGgB,EAAMf,MACP,kBAACJ,EAAD,iBACMmB,EADN,CAEEC,YAAaD,EAAME,KACnBC,KAAMH,EAAMG,UC0FLC,EA7FA,WAAO,IAAD,EACKC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KAJA,mBACZC,EADY,KACNC,EADM,KA6DnB,OACE,kBAACjB,EAAD,KACE,kBAAC,EAAD,CACES,KAAK,sBACLC,KAAK,QACLlB,MAAM,QACN0B,SAAU,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,IAAYH,MAAOM,EAAEC,OAAOC,YAEtD,kBAAC,EAAD,CACEZ,KAAK,WACLC,KAAK,WACLlB,MAAM,QACN0B,SAAU,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,IAAYF,SAAUK,EAAEC,OAAOC,YAEzD,kBAAC,EAAD,CACEZ,KAAK,sBACLC,KAAK,WACLlB,MAAM,QACN0B,SAAU,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,IAAYD,gBAAiBI,EAAEC,OAAOC,YAEhE,kBAAC,EAAD,CACEX,KAAK,SACLW,MAAM,YACNC,QAAS,WA5EbC,IACGC,KAAK,iCAAkCR,GACvCS,MAAK,SAAUC,IACTA,EAASC,OAAS,MAAQX,EAAKF,WAAaE,EAAKD,iBACpDa,OAAOC,SAASC,YAGnBC,OAAM,SAAUC,GACXhB,EAAKH,MAAMoB,OAAS,GAAKjB,EAAKF,SAASmB,OAAS,GAClDC,MAAM,+BAMO,KAAflB,EAAKH,OAAkC,KAAlBG,EAAKF,SAC5BqB,IAAKC,KAAK,CACRC,MAAO,mBACPC,KAAM,8CACNC,KAAM,QACNC,kBAAmB,OAEG,KAAfxB,EAAKH,MACdsB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,oCACNC,KAAM,QACNC,kBAAmB,OAEM,KAAlBxB,EAAKF,SACdqB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,oCACNC,KAAM,QACNC,kBAAmB,OAEZxB,EAAKH,MAAMoB,QAAU,EAC9BE,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,qDACNC,KAAM,QACNC,kBAAmB,OAEZxB,EAAKF,UAAY,GAC1BqB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,qDACNC,KAAM,QACNC,kBAAmB,YCqCZC,EA7FD,SAAClC,GAAW,IAAD,EACCK,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAHW,mBAChBE,EADgB,KACVC,EADU,KAmEvB,OACE,kBAAChB,EAAD,KACE,kBAAC,EAAD,CACEQ,KAAK,sBACLC,KAAK,QACLlB,MAAM,QACN0B,SAAU,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,IAAYH,MAAOM,EAAEC,OAAOC,YAEtD,kBAAC,EAAD,CACEZ,KAAK,WACLC,KAAK,WACLlB,MAAM,QACN0B,SAAU,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,IAAYF,SAAUK,EAAEC,OAAOC,YAEzD,kBAAC,EAAD,CACEX,KAAK,SACLW,MAAM,UACNC,QAAS,WA7EbC,IACGC,KAAK,8BAA+BR,GACpCS,MAAK,SAAUC,GACdgB,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIjB,EAASkB,KAAKC,OACF,MAApBnB,EAASC,SACXmB,aAAaC,QAAQ,iBAAkBrB,EAASkB,KAAKC,OACrDjB,OAAOC,SAASC,aAGnBC,OAAM,SAAUC,GACXhB,EAAKH,MAAMoB,OAAS,GAAKjB,EAAKF,SAASmB,OAAS,GAClDE,IAAKC,KAAK,CACRC,MAAO,sBACPC,KAAM,2BACNC,KAAM,QACNC,kBAAmB,UAMR,KAAfxB,EAAKH,OAAkC,KAAlBG,EAAKF,SAC5BqB,IAAKC,KAAK,CACRC,MAAO,mBACPC,KAAM,8CACNC,KAAM,QACNC,kBAAmB,OAEG,KAAfxB,EAAKH,MACdsB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,oCACNC,KAAM,QACNC,kBAAmB,OAEM,KAAlBxB,EAAKF,SACdqB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,oCACNC,KAAM,QACNC,kBAAmB,OAEZxB,EAAKH,MAAMoB,QAAU,EAC9BE,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,qDACNC,KAAM,QACNC,kBAAmB,OAEZxB,EAAKF,UAAY,GAC1BqB,IAAKC,KAAK,CACRC,MAAO,iBACPC,KAAM,qDACNC,KAAM,QACNC,kBAAmB,YC3DZQ,G,MAPA,SAACzC,GACd,OACE,4CAAYA,EAAZ,CAAmB0C,UAAW1C,EAAM2C,UACjC3C,EAAM+B,QCgDEa,EA9CK,SAAC5C,GAAW,IAAD,EACKK,oBAAS,GADd,mBACtBwC,EADsB,KACXC,EADW,OAEOzC,oBAAS,GAFhB,mBAEtB0C,EAFsB,KAEVC,EAFU,KAS7B,OAAIhD,EAAMiD,OAEN,kBAAC5D,EAAD,KACE,kBAAC,EAAD,CAAQ0C,KAAK,SAASY,QAAQ,SAAS5B,QAR7C,WACEwB,aAAaW,WAAW,kBACxB7B,OAAOC,SAASC,cAUG,IAAjBvB,EAAMiD,OAEN,kBAAC7D,EAAD,KACGyD,GACC,kBAAC,EAAD,CACEd,KAAK,YACLY,QAAQ,SACR5B,QAAS,WACP+B,GAAa,GACbE,GAAc,MAInBD,GACC,kBAAC,EAAD,CACEhB,KAAK,QACLY,QAAQ,WACR5B,QAAS,WACP+B,GAAa,GACbE,GAAc,MAInBH,GAAa,kBAAC,EAAD,MACbE,GAAc,kBAAC,EAAD,YAxBrB,GCRaI,EAXA,SAACnD,GACd,OACE,kBAACd,EAAD,KACE,0DACA,6BACE,kBAAC,EAAD,CAAa+D,OAAQjD,EAAMoD,cCqCpBC,EA1CO,SAACrD,GAAW,IAAD,EACGK,mBAAS,CACzCiD,aAAc,GACdC,aAAc,GACdC,WAAY,KAJiB,mBACxBC,EADwB,KACbC,EADa,KAsB/B,OAfAC,qBAAU,WACR3C,IACG4C,IAAI,sCACJ1C,MAAK,SAAC2C,GACLH,EAAa,CACXJ,aAAcO,EAAIxB,KAAKyB,OAAOC,eAC9BR,aAAcM,EAAIxB,KAAKyB,OAAOE,eAC9BR,WAAYK,EAAIxB,KAAKyB,OAAOG,iBAG/BzC,OAAM,SAAUC,GACfU,QAAQC,IAAIX,QAEf,IAGD,wBAASzB,EACP,6BACE,kBAACL,EAAD,KACE,4CACA,iDAAuB8D,EAAUH,cACjC,2BACE,kBAAC1D,EAAD,gCACC6D,EAAUF,cAEb,2BACE,kBAACzD,EAAD,iBACC2D,EAAUD,gB,yBCyGRU,EAxIQ,SAAClE,GAAW,IAAD,EACFK,mBAAS,IADP,mBACzB8D,EADyB,KAChBC,EADgB,OAEE/D,mBAAS,CACzCiD,aAAc,GACdC,aAAc,GACdC,WAAY,KALkB,mBAEzBC,EAFyB,KAEdC,EAFc,OAOIrD,oBAAS,GAPb,mBAOzBgE,EAPyB,KAObC,EAPa,KAS1BlB,EAAWpD,EAAMoD,SAEnBmB,EAAQ,IAAIC,KACZC,EAAY,IAAID,KACpBD,EAAMG,QAAQH,EAAMI,UAAY,GAChCF,EAAUC,QAAQD,EAAUE,UAAY,GAExCJ,EAAQA,EAAMK,cAAcC,MAAM,EAAG,IACrCJ,EAAYA,EAAUG,cAAcC,MAAM,EAAG,IAE7C,IAAMC,EAAO,uCAAG,WAAOX,GAAP,SAAAY,EAAA,sEACR/D,IACH4C,IADG,6CAEoCO,EAFpC,iBAEoDM,EAFpD,yBAE8EF,EAF9E,eAIHrD,MAAK,SAAC2C,GACL,GAAmB,MAAfA,EAAIzC,OAAgB,CACtB,IAAM4D,EAAInB,EAAIxB,KAAK,GACnBqB,EAAa,CACXJ,aAAc0B,EAAEC,UAChB1B,aAAcyB,EAAEE,UAChB1B,WAAYwB,EAAEG,SAEhBhD,QAAQC,IAAI,SAAUyB,EAAIzC,YAG7BI,OAAM,SAAUC,GACf6C,GAAc,GACd1C,IAAKC,KAAK,CACRC,MAAO,mBACPC,KAAM,8BACNC,KAAM,QACNC,kBAAmB,UAtBX,2CAAH,sDAiCb,OALA0B,qBAAU,WACRmB,EAAQ,YAEP,IAEK9E,EAAMoF,YACZ,IAAK,SACH,OACE,6BACE,kBAACzF,EAAD,KACE,8CACA,iDAAuB8D,EAAUH,cACjC,2BACE,kBAAC1D,EAAD,gCACC6D,EAAUF,cAEb,2BACE,kBAACzD,EAAD,iBACC2D,EAAUD,cAMrB,IAAK,UACH,OAAIJ,EAEA,6BACGiB,GACC,kBAAC1E,EAAD,KACE,oCAAUwE,GACV,iDAAuBV,EAAUH,cACjC,2BACE,kBAAC1D,EAAD,gCACC6D,EAAUF,cAEb,2BACE,kBAACzD,EAAD,iBACC2D,EAAUD,aAKjB,yBAAKd,UAAU,UACb,kBAAC,EAAD,CACExC,KAAK,0BACLC,KAAK,OACLQ,SAAU,SAACC,GAAD,OAAOwD,EAAWxD,EAAEC,OAAOC,UAEvC,kBAAC,EAAD,CACE6B,QAAQ,UACRZ,KAAK,YACLhB,QAAS,WACP,GAAgB,KAAZoD,EASF,OARAG,GAAc,QACd1C,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM,gCACNC,KAAM,QACNC,kBAAmB,OAIZkC,EAAQzC,QAAU,GAC3BE,IAAKC,KAAK,CACRC,MAAO,oBACPC,KAAM,6CACNC,KAAM,QACNC,kBAAmB,OAErBqC,GAAc,KAEdQ,EAAQX,GACRG,GAAc,SAQnB,qCAGX,QACE,OAAO,uCClHEe,EAnBF,SAACrF,GACZ,OACE,kBAACV,EAAiBU,EAChB,6BACE,kBAACT,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgB6F,WAAW,YAE7B,kBAAC5F,EAAD,KACE,kBAAC,EAAD,CACE4F,WAAW,UACXhC,SAAUpD,EAAMoD,eCsBbkC,I,MAhCC,WAAM,MAEQjF,oBAAS,GAFjB,mBAEb4C,EAFa,KAELsC,EAFK,KAIpB5B,qBAAU,WACuC,OAA3CpB,aAAaiD,QAAQ,mBACvBD,GAAU,KAEX,IAgBH,OAFApD,QAAQC,IAAI,gBAAiBa,GAG3B,6BACE,kBAAC,EAAD,CAAQG,SAAUH,IAClB,kBAAC,EAAD,CAAMlC,QAjBS,YACF,IAAXkC,GACFrB,IAAKC,KAAK,CACRC,MAAO,mCACPC,KAAM,gDACNC,KAAM,QACNC,kBAAmB,QAWMmB,SAAUH,OCvB5BwC,OARf,WACE,OACE,yBAAK/C,UAAU,OACb,kBAAC,GAAD,QCKcgD,QACW,cAA7BrE,OAAOC,SAASqE,UAEe,UAA7BtE,OAAOC,SAASqE,UAEhBtE,OAAOC,SAASqE,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlF,MAAK,SAAAmF,GACJA,EAAaC,gBAEd9E,OAAM,SAAAC,GACLU,QAAQV,MAAMA,EAAM8E,c","file":"static/js/main.70c099ba.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n//Input.js page\r\nexport const InputCustom = styled.input`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 18px;\r\n  border: 1px solid gray;\r\n  margin: 5px;\r\n`;\r\n\r\nexport const LabelStyle = styled.label`\r\n  font-size: 26px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\n//Header.js page\r\nexport const HeaderCustom = styled.div`\r\n  background-color: rgb(104, 104, 179);\r\n  border-bottom: 10px solid black;\r\n  display: flex;\r\n  justify-content: center;\r\n  max-height: 320px;\r\n  height: 300px;\r\n  padding: 0 20px 0 20px;\r\n\r\n  h1 {\r\n    font-size: 80px;\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\n//VerifyLogin.js page\r\nexport const DivDisplay = styled.div`\r\n  text-align: center;\r\n  padding: 20px;\r\n`;\r\nexport const DivLogout = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\n//Body.js page\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  /* background-color: rgb(130, 140, 155); */\r\n  background-color: rgb(198, 188, 230);\r\n`;\r\nexport const DivDisplayFixed = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`;\r\nexport const DivDisplayDynamic = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\n//SignUp.js page\r\nexport const SignUpStyle = styled.div`\r\n  background-color: rgb(55, 55, 117);\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  margin-left: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n//Login.js page\r\nexport const LoginStyle = styled.div`\r\n  background-color: rgb(118, 118, 167);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  margin-left: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n//--- DATA DISPLAY ---\r\nexport const Display = styled.div`\r\n  height: 200px;\r\n  width: 320px;\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  background-color: rgb(255, 255, 255);\r\n  margin: 20px;\r\n  padding: 20px;\r\n  font-size: 18px;\r\n\r\n  p:first-child {\r\n    border-bottom: 2px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 22px;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const DataGreen = styled.span`\r\n  color: green;\r\n`;\r\nexport const DataRed = styled.span`\r\n  color: red;\r\n`;\r\n","import React from \"react\";\r\nimport { InputCustom, LabelStyle } from \"../../styles\";\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <LabelStyle>\r\n      {props.label}\r\n      <InputCustom\r\n        {...props}\r\n        placeholder={props.hint}\r\n        type={props.type}\r\n      ></InputCustom>\r\n    </LabelStyle>\r\n  );\r\n};\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nimport { SignUpStyle } from \"../../styles\";\r\nimport Input from \"../../Components/Input/Input\";\r\n\r\nconst SignUp = () => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n  });\r\n\r\n  const efetuarCadastro = () => {\r\n    axios\r\n      .post(\"https://reqres.in/api/register\", user)\r\n      .then(function (response) {\r\n        if ((response.status = 200) && user.password === user.passwordConfirm) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (user.email.length > 3 && user.password.length > 3) {\r\n          alert(\"Email ou Senha invalidos\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkData = () => {\r\n    if (user.email === \"\" && user.password === \"\") {\r\n      Swal.fire({\r\n        title: \"Campos Invalidos\",\r\n        text: \"Campo Email e Senha não podem ser vazios\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.email === \"\") {\r\n      Swal.fire({\r\n        title: \"Email Invalido\",\r\n        text: \"Campo Email não pode ser vazio\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.password === \"\") {\r\n      Swal.fire({\r\n        title: \"Senha Invalido\",\r\n        text: \"Campo Senha não pode ser vazio\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.email.length <= 3) {\r\n      Swal.fire({\r\n        title: \"Email Invalido\",\r\n        text: \"Campo Email não pode ser menor que 4 caracteres\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.password <= 3) {\r\n      Swal.fire({\r\n        title: \"Senha Invalido\",\r\n        text: \"Campo Senha não pode ser menor que 4 caracteres\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SignUpStyle>\r\n      <Input\r\n        hint=\"Digite seu email...\"\r\n        type=\"email\"\r\n        label=\"email\"\r\n        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n      ></Input>\r\n      <Input\r\n        hint=\"Senha...\"\r\n        type=\"password\"\r\n        label=\"Senha\"\r\n        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n      ></Input>\r\n      <Input\r\n        hint=\"Confirme a Senha...\"\r\n        type=\"password\"\r\n        label=\"Senha\"\r\n        onChange={(e) => setUser({ ...user, passwordConfirm: e.target.value })}\r\n      ></Input>\r\n      <Input\r\n        type=\"submit\"\r\n        value=\"Cadastrar\"\r\n        onClick={() => {\r\n          efetuarCadastro();\r\n          checkData();\r\n        }}\r\n      ></Input>\r\n    </SignUpStyle>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { LoginStyle } from \"../../styles\";\r\n\r\nimport axios from \"axios\";\r\nimport Input from \"../../Components/Input/Input\";\r\n\r\nconst Login = (props) => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const efetuarLogin = () => {\r\n    axios\r\n      .post(\"https://reqres.in/api/login\", user)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(response.data.token);\r\n        if (response.status === 200) {\r\n          localStorage.setItem(\"@covid19/token\", response.data.token);\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (user.email.length > 3 && user.password.length > 3) {\r\n          Swal.fire({\r\n            title: \"Usuário Invalido\",\r\n            text: \"Email ou Senha invalidos\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const checkData = () => {\r\n    if (user.email === \"\" && user.password === \"\") {\r\n      Swal.fire({\r\n        title: \"Campos Invalidos\",\r\n        text: \"Campo Email e Senha não podem ser vazios\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.email === \"\") {\r\n      Swal.fire({\r\n        title: \"Email Invalido\",\r\n        text: \"Campo Email não pode ser vazio\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.password === \"\") {\r\n      Swal.fire({\r\n        title: \"Senha Invalido\",\r\n        text: \"Campo Senha não pode ser vazio\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.email.length <= 3) {\r\n      Swal.fire({\r\n        title: \"Email Invalido\",\r\n        text: \"Campo Email não pode ser menor que 4 caracteres\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else if (user.password <= 3) {\r\n      Swal.fire({\r\n        title: \"Senha Invalido\",\r\n        text: \"Campo Senha não pode ser menor que 4 caracteres\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginStyle>\r\n      <Input\r\n        hint=\"Digite seu email...\"\r\n        type=\"email\"\r\n        label=\"email\"\r\n        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n      ></Input>\r\n      <Input\r\n        hint=\"Senha...\"\r\n        type=\"password\"\r\n        label=\"Senha\"\r\n        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n      ></Input>\r\n      <Input\r\n        type=\"submit\"\r\n        value=\"Acessar\"\r\n        onClick={() => {\r\n          efetuarLogin();\r\n          checkData();\r\n        }}\r\n      ></Input>\r\n    </LoginStyle>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button {...props} className={props.typebtn}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { DivDisplay, DivLogout } from \"../../styles\";\r\n\r\nimport SignUp from \"../../Containers/SignUp/SignUp\";\r\nimport Login from \"../../Containers/login/Login\";\r\nimport Button from \"../../Components/Button/Button\";\r\n\r\nconst VerifyLogin = (props) => {\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [showSignUp, setShowSignUp] = useState(false);\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"@covid19/token\");\r\n    window.location.reload();\r\n  }\r\n\r\n  if (props.logged) {\r\n    return (\r\n      <DivLogout>\r\n        <Button text=\"Logout\" typebtn=\"btnRed\" onClick={logout}></Button>\r\n      </DivLogout>\r\n    );\r\n  }\r\n  if (props.logged === false) {\r\n    return (\r\n      <DivDisplay>\r\n        {showLogin && (\r\n          <Button\r\n            text=\"Cadastrar\"\r\n            typebtn=\"btnRed\"\r\n            onClick={() => {\r\n              setShowLogin(false);\r\n              setShowSignUp(true);\r\n            }}\r\n          ></Button>\r\n        )}\r\n        {showSignUp && (\r\n          <Button\r\n            text=\"Login\"\r\n            typebtn=\"btnGreen\"\r\n            onClick={() => {\r\n              setShowLogin(true);\r\n              setShowSignUp(false);\r\n            }}\r\n          ></Button>\r\n        )}\r\n        {showLogin && <Login></Login>}\r\n        {showSignUp && <SignUp></SignUp>}\r\n      </DivDisplay>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VerifyLogin;\r\n","import React from \"react\";\r\n\r\nimport { HeaderCustom } from \"../../styles\";\r\nimport VerifyLogin from \"../../Components/VerifyLogin/VerifyLogin\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <HeaderCustom>\r\n      <h1>Casos de Covid 19 no Mundo</h1>\r\n      <div>\r\n        <VerifyLogin logged={props.isLogged}></VerifyLogin>\r\n      </div>\r\n    </HeaderCustom>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Display, DataGreen, DataRed } from \"../../styles\";\r\n\r\nconst GlobalRequest = (props) => {\r\n  const [dataTotal, setDataTotal] = useState({\r\n    totalConfirm: \"\",\r\n    totalRecover: \"\",\r\n    totalDeath: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.covid19api.com/summary\")\r\n      .then((res) => {\r\n        setDataTotal({\r\n          totalConfirm: res.data.Global.TotalConfirmed,\r\n          totalRecover: res.data.Global.TotalRecovered,\r\n          totalDeath: res.data.Global.TotalDeaths,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div {...props}>\r\n      <div>\r\n        <Display>\r\n          <p>Casos Globais</p>\r\n          <p>Casos Confirmados: {dataTotal.totalConfirm}</p>\r\n          <p>\r\n            <DataGreen>Pacientes Recuperados: </DataGreen>\r\n            {dataTotal.totalRecover}\r\n          </p>\r\n          <p>\r\n            <DataRed>Mortes: </DataRed>\r\n            {dataTotal.totalDeath}\r\n          </p>\r\n        </Display>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalRequest;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Display, DataGreen, DataRed } from \"../../styles\";\r\nimport Input from \"../../Components/Input/Input\";\r\nimport Button from \"../../Components/Button/Button\";\r\n\r\nconst CountryRequest = (props) => {\r\n  const [country, setCountry] = useState(\"\");\r\n  const [dataTotal, setDataTotal] = useState({\r\n    totalConfirm: \"\",\r\n    totalRecover: \"\",\r\n    totalDeath: \"\",\r\n  });\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const isLogged = props.isLogged;\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  today.setDate(today.getDate() - 1);\r\n  yesterday.setDate(yesterday.getDate() - 2);\r\n\r\n  today = today.toISOString().slice(0, 10);\r\n  yesterday = yesterday.toISOString().slice(0, 10);\r\n\r\n  const request = async (country) => {\r\n    await axios\r\n      .get(\r\n        `https://api.covid19api.com/country/${country}?from=${yesterday}T00:00:00Z&to=${today}T00:00:00Z`\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          const r = res.data[0];\r\n          setDataTotal({\r\n            totalConfirm: r.Confirmed,\r\n            totalRecover: r.Recovered,\r\n            totalDeath: r.Deaths,\r\n          });\r\n          console.log(\"stat->\", res.status);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setShowResult(false);\r\n        Swal.fire({\r\n          title: \"País Invalido\",\r\n          text: \"Digite um país Válido\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Ok\",\r\n        });\r\n      });\r\n    // <-- empty dependency array\r\n  };\r\n\r\n  useEffect(() => {\r\n    request(\"brazil\");\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  switch (props.searchType) {\r\n    case \"static\":\r\n      return (\r\n        <div>\r\n          <Display>\r\n            <p>Casos do Brasil</p>\r\n            <p>Casos Confirmados: {dataTotal.totalConfirm}</p>\r\n            <p>\r\n              <DataGreen>Pacientes Recuperados: </DataGreen>\r\n              {dataTotal.totalRecover}\r\n            </p>\r\n            <p>\r\n              <DataRed>Mortes: </DataRed>\r\n              {dataTotal.totalDeath}\r\n            </p>\r\n          </Display>\r\n        </div>\r\n      );\r\n\r\n    case \"dynamic\":\r\n      if (isLogged) {\r\n        return (\r\n          <div>\r\n            {showResult && (\r\n              <Display>\r\n                <p>Casos {country}</p>\r\n                <p>Casos Confirmados: {dataTotal.totalConfirm}</p>\r\n                <p>\r\n                  <DataGreen>Pacientes Recuperados: </DataGreen>\r\n                  {dataTotal.totalRecover}\r\n                </p>\r\n                <p>\r\n                  <DataRed>Mortes: </DataRed>\r\n                  {dataTotal.totalDeath}\r\n                </p>\r\n              </Display>\r\n            )}\r\n\r\n            <div className=\"search\">\r\n              <Input\r\n                hint=\"Pesquisa por País...\"\r\n                type=\"text\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Input>\r\n              <Button\r\n                typebtn=\"btnGrey\"\r\n                text=\"Pesquisar\"\r\n                onClick={() => {\r\n                  if (country === \"\") {\r\n                    setShowResult(false);\r\n                    Swal.fire({\r\n                      title: \"Vazio!\",\r\n                      text: \"O campo não pode ser vazio\",\r\n                      icon: \"error\",\r\n                      confirmButtonText: \"Ok\",\r\n                    });\r\n\r\n                    return;\r\n                  } else if (country.length <= 3) {\r\n                    Swal.fire({\r\n                      title: \"País Invalido!\",\r\n                      text: \"Digite um país com mais de 3 caracteres\",\r\n                      icon: \"error\",\r\n                      confirmButtonText: \"Ok\",\r\n                    });\r\n                    setShowResult(false);\r\n                  } else {\r\n                    request(country);\r\n                    setShowResult(true);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <></>;\r\n      }\r\n\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default CountryRequest;\r\n","import React from \"react\";\r\n\r\nimport { DivContainer, DivDisplayFixed, DivDisplayDynamic } from \"../../styles\";\r\n\r\nimport GlobalRequest from \"../../data/GlobalRequest/GlobalRequest\";\r\nimport CountryRequest from \"../../data/CountryRequest/CountryRequest\";\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <DivContainer {...props}>\r\n      <div>\r\n        <DivDisplayFixed>\r\n          <GlobalRequest></GlobalRequest>\r\n          <CountryRequest searchType=\"static\"></CountryRequest>\r\n        </DivDisplayFixed>\r\n        <DivDisplayDynamic>\r\n          <CountryRequest\r\n            searchType=\"dynamic\"\r\n            isLogged={props.isLogged}\r\n          ></CountryRequest>\r\n        </DivDisplayDynamic>\r\n      </div>\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Header from \"../../Containers/Header/header\";\r\nimport Body from \"../../Containers/Body/Body\";\r\n\r\nimport \"./initial.css\";\r\n\r\nconst Initial = () => {\r\n  //verify if the user is logged\r\n  const [logged, setLogged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"@covid19/token\") !== null) {\r\n      setLogged(true);\r\n    }\r\n  }, []);\r\n\r\n  const allowClick = () => {\r\n    if (logged === false) {\r\n      Swal.fire({\r\n        title: \"Usuário não está logado\",\r\n        text: \"Por favor, faça o login antes de Continuar\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //output in console\r\n  console.log(\"ta logado? ->\", logged);\r\n\r\n  return (\r\n    <div>\r\n      <Header isLogged={logged}></Header>\r\n      <Body onClick={allowClick} isLogged={logged}></Body>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Initial;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Initial from \"./pages/initial/initial\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Initial></Initial>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}